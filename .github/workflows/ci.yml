name: CI Pipeline

on:
  push:
    branches:
      - dev  
      - master
      - runner

jobs:
  build:
    runs-on: self-hosted 

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        run: | 
          conda init bash
          source ~/.bashrc 
          conda activate interpro-api
          pip install -r requirements.txt
          pip install -r dev_requirements.txt
          pip install tblib
          export LD_LIBRARY_PATH=$CONDA_PREFIX/lib:$LD_LIBRARY_PATH

      - name: Run Elastic
        run: |
          cd ../../../elasticsearch-8.15.3/bin
          ./elasticsearch &
    
      
      # - name: ⚙️🔎 - Setup elastic search
      #   run: |
      #     curl --user elastic:elasticsearch_password 'https://localhost:9200' -k
      #     curl --user elastic:elasticsearch_password -XPUT 'https://localhost:9200/test?pretty' -H 'Content-Type: application/json' -d @config/elastic_mapping.json -k
      #     curl --user elastic:elasticsearch_password -XPUT 'https://localhost:9200/ida?pretty' -H 'Content-Type: application/json' -d @config/elastic_ida_mapping.json -k

      # - name: 🧪 - Testing
      #   run: |
      #     echo -e "searcher_user: elastic \nsearcher_test_password: elasticsearch_password" > config/interpro.local.yml
      #     cat config/interpro.local.yml
      #     export BROWSER_TEST=chrome
      #     coverage run --source='.' manage.py test

      - name: Release 
        run: |

            # Release to dev
            if [ "${{ github.ref }}" == "refs/heads/runner" ]; then
              export VM_BASE_PATH="/nfs/www-prod/web_hx2/interpro/dev/api/releases/";
              export VM_NAME="wp-np3-bc";

            # Release to staging
            elif [ "${{ github.ref }}" == "refs/heads/dev" ]; then
              export VM_BASE_PATH="/nfs/www-prod/web_hx2/interpro/stage/api/releases/";
              export VM_NAME="wp-np3-be";
            fi

            # Define folder name
            export IPRO_RELEASE_FOLDER="interpro7-api-$(date --utc +%Y_%m_%d-%H_%M_%S_utc)";
            
            # SSH into correct VM and create directory
            ssh "$VM_NAME" "cd $VM_BASE_PATH; mkdir "${IPRO_RELEASE_FOLDER}"";

            # Copy contents of the build
            scp -q -r * "$VM_NAME":"$VM_BASE_PATH/$IPRO_RELEASE_FOLDER";
            scp -q -r /net/isilonP/public/rw/homes/ipr_adm/release-procedures/deploy-configs/api/staging/* "$VM_NAME":"$VM_BASE_PATH/$IPRO_RELEASE_FOLDER/config/";