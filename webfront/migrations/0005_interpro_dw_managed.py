# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('webfront', '0004_auto_20151221_1204'),
    ]

    operations = [
        migrations.CreateModel(
            name='DwEntry',
            fields=[
                ('entry_pk', models.FloatField(primary_key=True, serialize=False)),
                ('entry_ac', models.CharField(max_length=9, unique=True)),
                ('entry_type', models.CharField(max_length=1)),
                ('checked', models.CharField(max_length=1)),
                ('name', models.CharField(null=True, max_length=100, blank=True)),
                ('short_name', models.CharField(null=True, max_length=30, blank=True)),
                ('annotation', models.TextField(null=True, blank=True)),
                ('pathways_and_interactions', models.FloatField(null=True, blank=True)),
                ('proteins_matched', models.FloatField(null=True, blank=True)),
                ('domain_organisations', models.FloatField(null=True, blank=True)),
                ('structures', models.FloatField(null=True, blank=True)),
                ('related_resources', models.FloatField(null=True, blank=True)),
                ('citations', models.FloatField(null=True, blank=True)),
            ],
            options={
                'db_table': 'dw_entry',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DwEntryCitation',
            fields=[
                ('entry_citation_pk', models.FloatField(null=True, blank=True)),
                ('entry_fk', models.FloatField(null=True, blank=True)),
                ('id', models.CharField(max_length=11, primary_key=True, serialize=False)),
                ('title', models.CharField(null=True, max_length=740, blank=True)),
                ('year', models.IntegerField(null=True, blank=True)),
                ('volume', models.CharField(null=True, max_length=55, blank=True)),
                ('rawpages', models.CharField(null=True, max_length=100, blank=True)),
                ('doi_url', models.CharField(null=True, max_length=1500, blank=True)),
                ('pubmed_id', models.IntegerField(null=True, blank=True)),
                ('iso_journal', models.CharField(null=True, max_length=255, blank=True)),
                ('authors', models.CharField(null=True, max_length=4000, blank=True)),
            ],
            options={
                'db_table': 'dw_entry_citation',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DwEntryDomainOrg',
            fields=[
                ('id', models.AutoField(primary_key=True, verbose_name='ID', auto_created=True, serialize=False)),
                ('entry_do_pk', models.FloatField(null=True, blank=True)),
                ('entry_fk', models.FloatField(null=True, blank=True)),
                ('ida_fk', models.FloatField(null=True, blank=True)),
                ('ida', models.TextField(null=True, blank=True)),
                ('count_ida', models.FloatField(null=True, blank=True)),
            ],
            options={
                'db_table': 'dw_entry_domain_org',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DwEntryGo',
            fields=[
                ('id', models.AutoField(primary_key=True, verbose_name='ID', auto_created=True, serialize=False)),
                ('entry_go_pk', models.FloatField(null=True, blank=True)),
                ('entry_fk', models.FloatField(null=True, blank=True)),
                ('entry_ac', models.CharField(max_length=9)),
                ('go_id', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=200)),
                ('category', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'dw_entry_go',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DwEntryHierarchy',
            fields=[
                ('id', models.AutoField(primary_key=True, verbose_name='ID', auto_created=True, serialize=False)),
                ('hierarchy_pk', models.FloatField(null=True, blank=True)),
                ('entry_fk', models.FloatField(null=True, blank=True)),
                ('entry_ac', models.CharField(null=True, max_length=9, blank=True)),
                ('flag', models.CharField(null=True, max_length=1, blank=True)),
                ('rel_entry_ac', models.CharField(null=True, max_length=9, blank=True)),
                ('rel_entry_name', models.CharField(null=True, max_length=100, blank=True)),
                ('rel_parent_entry_ac', models.CharField(null=True, max_length=9, blank=True)),
            ],
            options={
                'db_table': 'dw_entry_hierarchy',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DwEntryInteraction',
            fields=[
                ('id', models.AutoField(primary_key=True, verbose_name='ID', auto_created=True, serialize=False)),
                ('entry_interaction_pk', models.FloatField(null=True, blank=True)),
                ('entry_fk', models.FloatField(null=True, blank=True)),
                ('protein_id', models.CharField(null=True, max_length=30, blank=True)),
                ('protein_ac', models.CharField(max_length=30)),
                ('interactor_protein_name', models.CharField(null=True, max_length=30, blank=True)),
                ('interactor_protein_ac', models.CharField(max_length=30)),
                ('intact_id', models.CharField(max_length=30)),
                ('pubmed_id', models.CharField(null=True, max_length=30, blank=True)),
            ],
            options={
                'db_table': 'dw_entry_interaction',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DwEntryMethod',
            fields=[
                ('id', models.AutoField(primary_key=True, verbose_name='ID', auto_created=True, serialize=False)),
                ('entry_method_pk', models.FloatField(null=True, blank=True)),
                ('entry_fk', models.FloatField(null=True, blank=True)),
                ('dbcode', models.CharField(max_length=1)),
                ('method_ac', models.CharField(max_length=25)),
                ('method_name', models.CharField(null=True, max_length=100, blank=True)),
                ('clan_id', models.CharField(null=True, max_length=15, blank=True)),
                ('clan_name', models.CharField(max_length=50)),
                ('clan_description', models.CharField(null=True, max_length=75, blank=True)),
            ],
            options={
                'db_table': 'dw_entry_method',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DwEntryPathway',
            fields=[
                ('id', models.AutoField(primary_key=True, verbose_name='ID', auto_created=True, serialize=False)),
                ('entry_pathway_pk', models.FloatField(null=True, blank=True)),
                ('entry_fk', models.FloatField(null=True, blank=True)),
                ('dbcode', models.CharField(max_length=1)),
                ('pathway_ac', models.CharField(max_length=70)),
                ('pathway_name', models.CharField(null=True, max_length=250, blank=True)),
            ],
            options={
                'db_table': 'dw_entry_pathway',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DwEntryProteinsMatched',
            fields=[
                ('id', models.AutoField(primary_key=True, verbose_name='ID', auto_created=True, serialize=False)),
                ('pm_pk', models.FloatField(null=True, blank=True)),
                ('entry_fk', models.FloatField()),
                ('dbid', models.IntegerField()),
                ('xref_fk', models.FloatField(null=True, blank=True)),
                ('protein_ac', models.CharField(max_length=60)),
                ('description', models.CharField(null=True, max_length=4000, blank=True)),
                ('tax_id', models.IntegerField(null=True, blank=True)),
                ('taxonomy_full_name', models.CharField(null=True, max_length=513, blank=True)),
                ('len', models.IntegerField()),
                ('struct_flag', models.CharField(max_length=1)),
                ('ida', models.TextField(null=True, blank=True)),
                ('ida_fk', models.FloatField(null=True, blank=True)),
                ('materialised_path', models.CharField(null=True, max_length=1024, blank=True)),
                ('seq_fk', models.FloatField(null=True, blank=True)),
                ('entry_list', models.CharField(null=True, max_length=4000, blank=True)),
            ],
            options={
                'db_table': 'dw_entry_proteins_matched',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DwEntryRelatedResource',
            fields=[
                ('entry_related_resource_pk', models.FloatField(null=True, blank=True)),
                ('entry_fk', models.FloatField(null=True, blank=True)),
                ('dbcode', models.CharField(max_length=1)),
                ('id', models.CharField(max_length=70, primary_key=True, serialize=False)),
                ('xref_name', models.CharField(null=True, max_length=300, blank=True)),
            ],
            options={
                'db_table': 'dw_entry_related_resource',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DwEntrySequence',
            fields=[
                ('id', models.AutoField(primary_key=True, verbose_name='ID', auto_created=True, serialize=False)),
                ('entry_ac', models.CharField(max_length=50)),
                ('seq_fk', models.FloatField(null=True, blank=True)),
                ('occurrence_count', models.FloatField(null=True, blank=True)),
            ],
            options={
                'db_table': 'dw_entry_sequence',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DwEntrySignature',
            fields=[
                ('id', models.AutoField(primary_key=True, verbose_name='ID', auto_created=True, serialize=False)),
                ('entry_signature_pk', models.FloatField(null=True, blank=True)),
                ('entry_fk', models.FloatField(null=True, blank=True)),
                ('dbcode', models.CharField(max_length=1)),
                ('method_ac', models.CharField(max_length=25)),
                ('method_name', models.CharField(null=True, max_length=100, blank=True)),
                ('signature_protein_count', models.FloatField(null=True, blank=True)),
            ],
            options={
                'db_table': 'dw_entry_signature',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DwEntryStructure',
            fields=[
                ('entry_structure_pk', models.FloatField(primary_key=True, serialize=False, blank=True)),
                ('entry_fk', models.FloatField(null=True, blank=True)),
                ('dbcode', models.CharField(max_length=1)),
                ('xref_identifier', models.CharField(max_length=70)),
            ],
            options={
                'db_table': 'dw_entry_structure',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DwProteinXref',
            fields=[
                ('id', models.AutoField(primary_key=True, verbose_name='ID', auto_created=True, serialize=False)),
                ('xref_pk', models.FloatField(null=True, blank=True, unique=True)),
                ('protein_ac', models.CharField(max_length=60, unique=True)),
                ('fragment', models.CharField(max_length=1)),
                ('dbid', models.IntegerField()),
                ('tax_id', models.IntegerField(null=True, blank=True)),
                ('taxonomy_scientific_name', models.CharField(null=True, max_length=255, blank=True)),
                ('taxonomy_full_name', models.CharField(null=True, max_length=513, blank=True)),
                ('seq_fk', models.FloatField(null=True, blank=True)),
                ('struct_flag', models.CharField(max_length=1)),
                ('protein_name', models.CharField(null=True, max_length=20, blank=True, unique=True)),
                ('description', models.CharField(null=True, max_length=4000, blank=True)),
                ('len', models.FloatField(null=True, blank=True)),
                ('entry_list', models.CharField(null=True, max_length=4000, blank=True)),
                ('ida_fk', models.FloatField(null=True, blank=True)),
                ('ida', models.TextField(null=True, blank=True)),
                ('ida_count', models.FloatField(null=True, blank=True)),
            ],
            options={
                'db_table': 'dw_protein_xref',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DwSeqStructPred',
            fields=[
                ('id', models.AutoField(primary_key=True, verbose_name='ID', auto_created=True, serialize=False)),
                ('seq_struct_pred_pk', models.FloatField(null=True, blank=True)),
                ('xref_fk', models.FloatField(null=True, blank=True)),
                ('seq_fk', models.FloatField(null=True, blank=True)),
                ('dbname', models.CharField(max_length=20)),
                ('domain_id', models.CharField(null=True, max_length=14, blank=True)),
                ('class_id', models.CharField(null=True, max_length=20, blank=True)),
                ('pos_from', models.IntegerField(null=True, blank=True)),
                ('pos_to', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'db_table': 'dw_seq_struct_pred',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DwSequence',
            fields=[
                ('seq_pk', models.FloatField(primary_key=True, serialize=False)),
                ('md5', models.CharField(max_length=32)),
                ('seq', models.TextField(null=True, blank=True)),
                ('len', models.FloatField(null=True, blank=True)),
                ('ida_count', models.FloatField(null=True, blank=True)),
                ('has_struct_xref', models.FloatField(null=True, blank=True)),
            ],
            options={
                'db_table': 'dw_sequence',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DwSignatureMatches',
            fields=[
                ('id', models.AutoField(primary_key=True, verbose_name='ID', auto_created=True, serialize=False)),
                ('signature_matches_pk', models.FloatField(null=True, blank=True)),
                ('protein_ac', models.CharField(null=True, max_length=15, blank=True)),
                ('method_ac', models.CharField(max_length=25)),
                ('status', models.CharField(max_length=1)),
                ('pos_from', models.IntegerField(null=True, blank=True)),
                ('pos_to', models.IntegerField(null=True, blank=True)),
                ('match_score', models.FloatField(null=True, blank=True)),
                ('method_name', models.CharField(null=True, max_length=100, blank=True)),
                ('method_database_name', models.CharField(max_length=20)),
                ('entry_ac', models.CharField(null=True, max_length=9, blank=True)),
                ('entry_short_name', models.CharField(null=True, max_length=30, blank=True)),
                ('entry_name', models.CharField(null=True, max_length=100, blank=True)),
                ('entry_type', models.CharField(null=True, max_length=20, blank=True)),
                ('seq_fk', models.FloatField(null=True, blank=True)),
                ('xref_fk', models.FloatField(null=True, blank=True)),
            ],
            options={
                'db_table': 'dw_signature_matches',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DwSignatureProteinsMatched',
            fields=[
                ('id', models.AutoField(primary_key=True, verbose_name='ID', auto_created=True, serialize=False)),
                ('spm_pk', models.FloatField(null=True, blank=True)),
                ('method_ac', models.CharField(max_length=25)),
                ('dbid', models.IntegerField()),
                ('xref_fk', models.FloatField(null=True, blank=True)),
                ('protein_ac', models.CharField(max_length=60)),
                ('description', models.CharField(null=True, max_length=4000, blank=True)),
                ('taxonomy_full_name', models.CharField(null=True, max_length=513, blank=True)),
                ('len', models.IntegerField()),
                ('struct_flag', models.CharField(max_length=1)),
                ('ida', models.TextField(null=True, blank=True)),
                ('seq_fk', models.FloatField(null=True, blank=True)),
                ('entry_list', models.CharField(null=True, max_length=4000, blank=True)),
            ],
            options={
                'db_table': 'dw_signature_proteins_matched',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DwSupermatch',
            fields=[
                ('id', models.AutoField(primary_key=True, verbose_name='ID', auto_created=True, serialize=False)),
                ('seq_fk', models.FloatField()),
                ('entry_ac', models.CharField(max_length=50)),
                ('pos_from', models.IntegerField()),
                ('pos_to', models.IntegerField()),
                ('entry_type', models.CharField(max_length=1)),
                ('ida_fk', models.FloatField()),
            ],
            options={
                'db_table': 'dw_supermatch',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DwTaxEntryCount',
            fields=[
                ('id', models.AutoField(primary_key=True, verbose_name='ID', auto_created=True, serialize=False)),
                ('tax_entry_count_pk', models.FloatField(null=True, blank=True)),
                ('entry_fk', models.FloatField(null=True, blank=True)),
                ('entry_ac', models.CharField(max_length=9)),
                ('tax_entry_count', models.FloatField(null=True, blank=True)),
                ('count_specified_tax_id', models.FloatField(null=True, blank=True)),
                ('tax_id', models.IntegerField()),
                ('parent_id', models.IntegerField(null=True, blank=True)),
                ('full_name', models.CharField(null=True, max_length=513, blank=True)),
                ('materialised_path', models.CharField(null=True, max_length=1024, blank=True)),
                ('parent_tec_fk', models.BigIntegerField(null=True, blank=True)),
                ('has_children', models.FloatField(null=True, blank=True)),
            ],
            options={
                'db_table': 'dw_tax_entry_count',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DwXrefPdbe',
            fields=[
                ('id', models.AutoField(primary_key=True, verbose_name='ID', auto_created=True, serialize=False)),
                ('xref_pdbe_pk', models.FloatField(null=True, blank=True)),
                ('xref_fk', models.FloatField(null=True, blank=True)),
                ('entry_id', models.CharField(max_length=4)),
                ('title', models.CharField(null=True, max_length=1024, blank=True)),
            ],
            options={
                'db_table': 'dw_xref_pdbe',
                'managed': True,
            },
        ),
    ]
