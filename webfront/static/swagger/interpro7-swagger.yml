openapi: 3.0.0
info:
  title: InterPro7 API
  description: |
    Programatic access of all the InterPro entries and its related entities.

    Currently there are 6 main endpoints: entry, protein, structure, taxonomy, proteome and set.

    The decription below refers to each of the endpoints indepndantly. However the API supports the combination of the endpoint.

    For example a URL `/entry/interpro` provides a pageable list of all the interpro entries. And the URL `/protein/uniprot/p99999` retrieves all the details of the protein identified ith the uniprot accession P99999.

    The combined URL `/entry/interpro/protein/uniprot/p99999` will list all the interpro entries that have a match in that particular protein.
  version: 0.0.1
servers:
  - url: https://www.ebi.ac.uk/interpro/api/
    description: Live server
  - url: https://wwwdev.ebi.ac.uk/interpro/api/
    description: Dev server
  - url: http://localhost:8007/api/
    description: Local server
paths:
  /entry:
    get:
      summary: Returns the overview counters of the InterPro entries.
      tags:
        - Entry
      parameters:
        - $ref: '#/components/parameters/entryGroupBy'
        - $ref: '#/components/parameters/entryIntegrated'
        - $ref: '#/components/parameters/entryType'
        - $ref: '#/components/parameters/entryGoCategory'
        - $ref: '#/components/parameters/entryGoTerm'
        - $ref: '#/components/parameters/entryIdaSearch'
        - $ref: '#/components/parameters/entryIdaIgnore'
        - $ref: '#/components/parameters/entryIdaOrdered'
        - $ref: '#/components/parameters/entryIdaExact'
      responses:
        '200':
          $ref: '#/components/responses/Aggregations'
        '204':
          $ref: '#/components/responses/NoContent'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '410':
          $ref: '#/components/responses/Gone'
        '500':
          $ref: '#/components/responses/ServerError'

  /entry/{sourceDB}:
    get:
      summary: Returns a list of the entries in the selected DB.
      tags:
        - Entry
      parameters:
        - name: sourceDB
          in: path
          required: true
          description: Either a member database, interpro or one of the wildcards- all, integrated, unintegrated
          schema:
            $ref: '#/components/schemas/EntryDB'
        - $ref: '#/components/parameters/entryGroupBy'
        - $ref: '#/components/parameters/entrySortBy'
        - $ref: '#/components/parameters/entryIntegrated'
        - $ref: '#/components/parameters/entryAnnotation'
        - $ref: '#/components/parameters/entryType'
        - $ref: '#/components/parameters/entryGoCategory'
        - $ref: '#/components/parameters/entryGoTerm'
        - $ref: '#/components/parameters/entryInterproStatus'
        - $ref: '#/components/parameters/entryInterproLatest'
        - $ref: '#/components/parameters/entrySignatureIn'
        - $ref: '#/components/parameters/entryExtraFields'
      responses:
        '200':    # status code
          $ref: '#/components/responses/List'
        '204':
          $ref: '#/components/responses/NoContent'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/Timeout'
        '410':
          $ref: '#/components/responses/Gone'
        '500':
          $ref: '#/components/responses/ServerError'
  /entry/{sourceDB}/{accession}:
    get:
      summary: Returns and object of the selected Entry
      tags:
        - Entry
      parameters:
        - name: sourceDB
          in: path
          required: true
          description: Either a member database, interpro or one of the wildcards (e.g. all)
          schema:
            $ref: '#/components/schemas/EntryDB'
        - name: accession
          in: path
          required: true
          description: The accession of the Entry to retrieve
          schema:
            type: string
          example: "IPR000001"
        - $ref: '#/components/parameters/entryIDA'
        - $ref: '#/components/parameters/entryInteractions'
        - $ref: '#/components/parameters/entryPathways'
        - $ref: '#/components/parameters/entryAnnotationMemberDB'
      responses:
        '200':    # status code
          description: A JSON array with the overview objects of the entries of the selected DB
          content:
            application/json:
              schema:
                type: object

  /protein:
    get:
      summary: Returns the overview counters of the Proteins in our DB.
      tags:
        - Protein
      parameters:
        - $ref: '#/components/parameters/proteinGroupBy'
      responses:
        '200':    # status code
          description: A JSON object with the number of proteins per database
          content:
            application/json:
              schema:
                type: object
  /protein/{sourceDB}:
    get:
      summary: Returns a list of the proteins in the selected DB.
      tags:
        - Protein
      parameters:
        - name: sourceDB
          in: path
          required: true
          description: The wild card 'uniprot' shows all the proteins, or it can be filtered by reviewed or unreviewed.
          schema:
            $ref: '#/components/schemas/ProteinDB'
        - name: size
          in: query
          description: Filter the proteins that belong to one of the size categories - i.e. small, medium, large.
          schema:
            type: string
            enum: ["small", "medium", "large"]
        - name: id
          in: query
          description: Filters the proteins by its ID. e.g. CYC_HUMAN
          schema:
            type: string
        - name: tax_id
          in: query
          description: Filters the proteins by its taxonomy ID. e.g. 9606
          schema:
            type: integer
        - name: protein_evidence
          in: query
          description: Filters the proteins by its evidence code - 1 to 6
          schema:
            type: integer
        - name: go_term
          in: query
          description: Filters the proteins that have been annotated with the given GO term. e.g. GO:0006122
          schema:
            type: string
        - name: ida
          in: query
          description: Filters the proteins that follow the domain architecture of a given ida e.g. 44d74765435ca3c68b3d87ebbb680e5498d1a24a
          schema:
            type: string
        - name: extra_fields
          in: query
          description: Include the extra fields in the  payload
          schema:
            type: string
            style: form
            explode: false
            enum:
            - counters
            - identifier
            - description
            - sequence
            - gene
            - go_terms
            - evidence_code
            - residues
            - fragment
            - tax_id
        - $ref: '#/components/parameters/proteinGroupBy'
        - $ref: '#/components/parameters/proteinSortBy'
      responses:
        '200':    # status code
          description: A JSON array with the overview objects of the proteins of the selected DB
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /protein/{sourceDB}/{accession}:
    get:
      summary: Returns and object of the selected protein
      tags:
        - Protein
      parameters:
        - name: sourceDB
          in: path
          required: true
          description: The wild card 'uniprot' shows all the proteins, or it can be filtered by reviewed or unreviewed.
          schema:
            $ref: '#/components/schemas/ProteinDB'
        - name: accession
          in: path
          required: true
          description: The accession of the protein to retrieve
          schema:
            type: string
          example: "P99999"
      responses:
        '200':    # status code
          description: A JSON array with the overview objects of the entries of the selected DB
          content:
            application/json:
              schema:
                type: object

  /structure:
    get:
      summary: Returns the overview counters of the structures in the database.
      tags:
        - Structure
      parameters:
        - $ref: '#/components/parameters/structureGroupBy'
      responses:
        '200':    # status code
          description: A JSON object with the number of entries per database
          content:
            application/json:
              schema:
                type: object
  /structure/{sourceDB}:
    get:
      summary: Returns a list of the structure in the selected DB.
      tags:
        - Structure
      parameters:
        - name: sourceDB
          in: path
          required: true
          description: The wild card 'uniprot' shows all the proteins, or it can be filtered by reviewed or unreviewed.
          schema:
            type: string
            enum: ["pdb"]
        - name: experiment_type
          in: query
          description: Filter the proteins that belong to one of the size categories - i.e. small, medium, large.
          schema:
            type: string
            enum: ["x-ray", "nmr"]
        - name: resolution
          in: query
          description: |
            Filters the structures by its resolution (in Amstrong).

            **Note**: The value can be a range. e.g. 2-4
          schema:
            type: float
        - name: extra_fields
          in: query
          description: Include the extra fields in the  payload
          schema:
            type: string
            style: form
            explode: false
            enum:
            - counters
            - short_name
            - other_names
            - release_date
            - literature
            - chains
        - $ref: '#/components/parameters/structureGroupBy'
        - $ref: '#/components/parameters/structureSortBy'
      responses:
        '200':    # status code
          description: A JSON object with the number of entries per database
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /structure/{sourceDB}/{accession}:
    get:
      summary: Returns an object with the detailst of the selected Structure
      tags:
        - Structure
      parameters:
        - name: sourceDB
          in: path
          required: true
          description: The only supported database for structure is PDB.
          schema:
            type: string
            enum: ["pdb"]
        - name: accession
          in: path
          required: true
          description: The accession of the Structure to retrieve
          schema:
            type: string
          example: "101m"
      responses:
        '200':    # status code
          description: An object with the detailsof the selected structure.
          content:
            application/json:
              schema:
                type: object

  /taxonomy:
    get:
      summary: Returns the overview counters of the taxonomy in the database.
      tags:
        - Taxonomy
      responses:
        '200':    # status code
          description: A JSON object with the number of taxa per database
          content:
            application/json:
              schema:
                type: object
  /taxonomy/{sourceDB}:
    get:
      summary: Returns a list of the taxa in the selected DB.
      tags:
        - Taxonomy
      parameters:
        - name: sourceDB
          in: path
          required: true
          description: The only supported database for taxonomy is UniProt.
          schema:
            type: string
            enum: ["uniprot"]
        - name: extra_fields
          in: query
          description: Include the extra fields in the  payload
          schema:
            type: string
            style: form
            explode: false
            enum:
            - counters
            - scientific_name
            - full_name
            - lineage
            - rank
      responses:
        '200':    # status code
          description: A JSON list with the basic dtails of the taxa corresponding to th current selection.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /taxonomy/{sourceDB}/{accession}:
    get:
      summary: Returns an object with the details of the selected Taxon
      tags:
        - Taxonomy
      parameters:
        - name: sourceDB
          in: path
          required: true
          description: The only supported database for taxonomy is UniProt.
          schema:
            type: string
            enum: ["uniprot"]
        - name: accession
          in: path
          required: true
          description: The accession of the Taxon to retrieve
          schema:
            type: integer
          example: 9606
      responses:
        '200':    # status code
          description: An object with the details of the selected taxon.
          content:
            application/json:
              schema:
                type: object

  /proteome:
    get:
      summary: Returns the overview counters of the Proteome in the database.
      tags:
        - Proteome
      responses:
        '200':    # status code
          description: A JSON object with the number of Proteomes per database
          content:
            application/json:
              schema:
                type: object
  /proteome/{sourceDB}:
    get:
      summary: Returns a list of the Proteomes in the selected DB.
      tags:
        - Proteome
      parameters:
        - name: sourceDB
          in: path
          required: true
          description: The only supported database for Proteome is UniProt.
          schema:
            type: string
            enum: ["uniprot"]
        - name: extra_fields
          in: query
          description: Include the extra fields in the  payload
          schema:
            type: string
            style: form
            explode: false
            enum:
            - counters
            - strain
            - assembly
      responses:
        '200':    # status code
          description: A JSON list with the basic dtails of the Proteome corresponding to th current selection.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /proteome/{sourceDB}/{accession}:
    get:
      summary: Returns an object with the details of the selected Proteome
      tags:
        - Proteome
      parameters:
        - name: sourceDB
          in: path
          required: true
          description: The only supported database for Proteome is UniProt.
          schema:
            type: string
            enum: ["uniprot"]
        - name: accession
          in: path
          required: true
          description: The accession of the Proteome to retrieve
          schema:
            type: string
          example: "up000000211"
      responses:
        '200':    # status code
          description: An object with the details of the selected Proteome.
          content:
            application/json:
              schema:
                type: object

  /set:
    get:
      summary: Returns the overview counters of the set in the database.
      tags:
        - Sets
      responses:
        '200':    # status code
          description: A JSON object with the number of sets per database
          content:
            application/json:
              schema:
                type: object
  /set/{sourceDB}:
    get:
      summary: Returns a list of the sets in the selected DB.
      tags:
        - Sets
      parameters:
        - name: sourceDB
          in: path
          required: true
          description: Currently we have sets of entries from pfam and cdd.
          schema:
            type: string
            enum: ["all", "cdd", "pfam"]
        - name: extra_fields
          in: query
          description: Include the extra fields in the  payload
          schema:
            type: string
            style: form
            explode: false
            enum:
            - counters
            - description
            - relationships
      responses:
        '200':    # status code
          description: A JSON list with the basic dtails of the set corresponding to the current selection.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /set/{sourceDB}/{accession}:
    get:
      summary: Returns an object with the details of the selected set.
      tags:
        - Sets
      parameters:
        - name: sourceDB
          in: path
          required: true
          description: Currently we have sets of entries from pfam and cdd.
          schema:
            type: string
            enum: ["all", "cdd", "pfam"]
        - name: accession
          in: path
          required: true
          description: The accession of the set to retrieve
          schema:
            type: string
          example: "cl0001"
      responses:
        '200':    # status code
          description: An object with the details of the selected Set.
          content:
            application/json:
              schema:
                type: object

components:
  schemas:
    MemberDB:
      type: string
      enum:
        - cathgene3d
        - hamap
        - panther
        - pirsf
        - prints
        - prosite
        - profile
        - pfam
        - prodom
        - smart
        - ssf
        - tigrfams
        - cdd
        - sfld
    EntryDB:
      type: string
      enum:
        - InterPro
        - all
        - unintegrated
        - integrated
        - cathgene3d
        - hamap
        - panther
        - pirsf
        - prints
        - prosite
        - profile
        - pfam
        - prodom
        - smart
        - ssf
        - tigrfams
        - cdd
        - sfld
    EntryType:
      type: string
      enum:
        - homologous_superfamily
        - family
        - domain
        - repeat
        - conserved_site
        - binding_site
        - active_site
        - ptm
    ProteinDB:
      type: string
      enum:
        - reviewed
        - unreviewed
        - uniprot
  parameters:
    entryGroupBy:
        name: group_by
        in: query
        description: |
          Groups the current selection of entries by the given parameter, and counts the unique entries for each group.

          **Note:** The valid values for the parameter to group by changes depending of the context:
            * `/entry`:
            * `/entry/all`:
            * `/entry/integrated`:
            * `/entry/unintegrated`:
              * `type`, `source_database`, `tax_id`, `go_terms`
            * `/entry/interpro`:
              * `type`, `tax_id`, `source_database`, `member_databases`, `go_terms`, `go_categories`
            * `/entry/{sourceDB}`:
              * `type`, `tax_id`, `source_database`, `go_terms`, `go_categories`

          **Note:** This parameter changes the output's format.

          **Note:** This parameter might not play along with other parameters.
        schema:
          type: string
          enum:
            - type
            - source_database
            - tax_id
            - member_databases
            - go_terms
            - go_categories
    entrySortBy:
        name: sort_by
        in: query
        description: Sorts te list by the given value
        schema:
          type: string
          enum:
            - accession
            - integrated
            - name
    entryIntegrated:
        name: integrated
        in: query
        description: Filters the entries that are integrated with the given interPro accession
        schema:
          type: string
          pattern: '^[Ii][Pp][Rr]\d{6}$'
    entryType:
        name: type
        in: query
        description: Filter entries by its entry type
        schema:
          $ref: '#/components/schemas/EntryType'
    entryGoCategory:
        name: go_category
        in: query
        description: Filter the entries tha belong to one of the high level GO categories. Use P for Biological Process, F for Molecular Function, and C for Cellular Component.
        schema:
          type: string
          enum: ["P", "F", "C"]
    entryGoTerm:
        name: go_term
        in: query
        description: Filters the entries that have been annotated with the given GO term.
        schema:
          type: string
          pattern: '^[Gg][Oo]:\d{7}$'
    entryAnnotation:
        name: annotation
        in: query
        description: Filters the entries to those which have an annotation of the given type
        schema:
          type: string
          enum:
            - logo
            - alignment
            - hmm
    entryIdaSearch:
        name: ida_search
        in: query
        description: |
          Search by InterPro Domain Architecture (IDA).

          Include a comma separated list of the domains accessions(InterPro or Pfam) to be included in the IDA.

          **Note:**  When using this parameter, the response won't include the aggregated counts of `/entry` and parameters not related with IDA search will be ignored.
        schema:
          type: string
    entryIdaIgnore:
        name: ida_ignore
        in: query
        description: |
          Ignore domains When doing a Search by InterPro Domain Architecture (IDA).

          Comma separated list of PFam or interprodomains to ignore.

          **Note:** This parameter only works when `ida_search` is also present.
        schema:
          type: string
    entryIdaOrdered:
        name: ordered
        in: query
        description: |
          Establish that the domains to search using `ida_search` should be in order

          **Note:** This parameter only works when `ida_search` is also present.
        schema:
          type: string
          enum:
            - ordered
    entryIdaExact:
        name: exact
        in: query
        description: |
          Establish that the domains to search using `ida_search` should be exact.

          Only the domains included in `ida_search` will be included and they will be  in the exact order.
          Only the domains included in `ida_search` will be included and they will be  in the exact order.

          **Note:** This parameter only works when `ida_search` and `ordered` are also present.
        schema:
          type: string
          enum:
            - exact
    entryInterproStatus:
        name: interpro_status
        in: query
        description: |
          counts how many entries in the selection are integrated and how many are not.

          **Note:** This only works if the sourceDB selected is a member Database.
        schema:
          type: string
          enum:
            - interpro_status
    entrySignatureIn:
        name: signature_in
        in: query
        description: |
          Filters InterPro entries to those that have a match with the given memberDB

          **Note:** This only works if the sourceDB selected is InterPro.
        schema:
          $ref: '#/components/schemas/MemberDB'
    entryInterproLatest:
        name: latest_entries
        in: query
        description: |
          List of the latest entries registered in Interpro. Based in the Release Notes.

          **Note:** This modifier doesn't operates in combination with other parameters.

          **Note:** This only works if the sourceDB selected is InterPro.
        schema:
          type: string
          enum:
            - latest_entries
    entryExtraFields:
        name: extra_fields
        in: query
        description: Includes the value of the selected fields
        schema:
          type: string
          style: form
          allowReserved: true
          explode: false
          enum:
          - counters
          - entry_id
          - short_name
          - description
          - wikipedia
          - literature
          - hierarchy
          - cross_references
          - entry_date
          - is_featured
          - overlaps_with
    entryIDA:
      name: ida
      in: query
      description: |
        Returns a list of the domain architectures that contain this entry.

        **Note:** This only works if the sourceDB selected is InterPro.

        **Note:** This modifier doesn't operates in combination with other parameters.
      schema:
          type: string
          enum:
            - ida
    entryInteractions:
      name: interactions
      in: query
      description: |
        Returns a list of interactions reported for the selected entry.

        **Note:** This only works if the sourceDB selected is InterPro.

        **Note:** This modifier doesn't operates in combination with other parameters.
      schema:
          type: string
          enum:
            - interactions
    entryPathways:
      name: pathways
      in: query
      description: |
        Returns a list of pathways reported for the selected entry.

        **Note:** This only works if the sourceDB selected is InterPro.

        **Note:** This modifier doesn't operates in combination with other parameters.
      schema:
          type: string
          enum:
            - pathways
    entryAnnotationMemberDB:
      name: annotation
      in: query
      description: |
        Extra annotations provided by the member database about this entry

        **Note:** This only works if the sourceDB selected is a member DB.

        **Note:** This modifier doesn't operates in combination with other parameters.
      schema:
          type: string
          enum:
            - logo
            - hmm
            - alignment


    proteinGroupBy:
        name: group_by
        in: query
        description: |
          Groups the current selection of proteins by the given parameter, and counts the unique proteins for each group.

          **Note:** This parameter changes the output's format.

          **Note:** This parameter might not play along with other parameters (e.g. sort_by)
        schema:
          type: string
          enum:
            - tax_id
            - source_database
            - go_terms
            - size
    proteinSortBy:
        name: sort_by
        in: query
        description: Sorts te list by the given value
        schema:
          type: string
          enum:
            - accession
            - length
    structureGroupBy:
        name: group_by
        in: query
        description: |
          Groups the current selection of structures by the given parameter, and counts the unique structures for each group.

          **Note:** This parameter changes the output's format.

          **Note:** This parameter might not play along with other parameters (e.g. sort_by)
        schema:
          type: string
          enum:
            - experiment_type
    structureSortBy:
        name: sort_by
        in: query
        description: Sorts te list by the given value
        schema:
          type: string
          enum:
            - accession
            - experiment_type
            - name
  responses:
    Aggregations:
      description: A JSON object with aggregating the entities in this endpoint by database
      content:
        application/json:
          schema:
            type: object
    List:
      description: |
        A JSON object that includes a key `results`, which is an list of the filtered values.

        This type of response can be paginated using the `cursor`, `page_size` parameters.
      content:
        application/json:
          schema:
            type: object
    NoContent:
      description: Empty response. The request is correct but produced an empty dataset.
    NotFound:
      description: Error. The request is incorrect.
    Gone:
      description: Error. The requested entity has been removed from InterPro.
      content:
        application/json:
          schema:
            type: object
    ServerError:
      description: Error. There was an issue in our servers.
    Timeout:
      description: |
        Timeout. The server took too long to process this request. Please notice that:
        * The request is moved to run in the background.
        * If you try again this query you should expect:
          * An almost instant 408, meaning the previous query is still running.
          * The response of the query, if the API has finished the background process.


